// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     String
  stores   Store[]
  queues   QueueEntry[]
  ratings  Rating[]
}

model Store {
  id          String   @id @default(uuid())
  name        String
  type        String
  description String
  color       String
  openTime    String
  closeTime   String
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id])
  menuItems   MenuItem[]
  queues      QueueEntry[]
  ratings     Rating[]
}

model MenuItem {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  iconName    String
  storeId     String
  store       Store    @relation(fields: [storeId], references: [id])
}

model QueueEntry {
  id        String   @id @default(uuid())
  joinedAt  DateTime @default(now())
  userId    String
  storeId   String
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
}

model Rating {
  id        String   @id @default(uuid())
  value     Int
  comment   String
  createdAt DateTime @default(now())
  userId    String
  storeId   String
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
}

